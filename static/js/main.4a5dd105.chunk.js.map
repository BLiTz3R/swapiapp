{"version":3,"sources":["components/searchBox.js","components/Selection.js","components/filmsCard.js","components/filmsList.js","components/peopleCard.js","components/peopleList.js","components/speciesCard.js","components/speciesList.js","components/planetsCard.js","components/planetsList.js","components/starshipsCard.js","components/starshipsList.js","components/vehiclesCard.js","components/vehiclesList.js","components/Navigation.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["SearchBox","_ref","searchField","searchChange","react_default","a","createElement","className","type","placeholder","onChange","Selection","onButtonSelection","onClick","FilmsCard","title","episode","director","producer","release_date","FilmsList","films","map","user","i","filmsCard","key","toLowerCase","episode_id","PeopleCard","name","gender","height","mass","hair_color","skin_color","eye_color","birth_year","PeopleList","people","peopleCard","SpeciesCard","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","SpeciesList","species","speciesCard","PlanetsCard","rotation_period","orbital_period","diameter","climate","gravity","terrain","population","PlanetsList","planets","planetsCard","StarshipsCard","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","concat","StarshipsList","starships","starshipsCard","VehiclesCard","vehicle_class","VehiclesList","vehicles","vehiclesCard","Navigation","style","position","top","right","window","location","reload","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","route","setState","onSearchChange","event","searchfield","target","value","state","results","_this2","_this$state","fetch","then","response","json","data","resultsFiltered","filter","result","includes","sort","b","components_Selection","components_Navigation","searchBox","filmsList","peopleList","speciesList","planetsList","starshipsList","vehiclesList","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4a5dd105.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search' \n            onChange={searchChange}\n            />\n        </div>\n\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Selection = ({onButtonSelection}) => {\n    return(\n            <div className=\"ph3 pt5\">\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('people')}>People</button>\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('planets')}>Planets</button>\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('films')}>Films</button>\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('species')}>Species</button>\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('vehicles')}>vehicles</button>\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('starships')}>Starships</button>\n            </div>\n    );\n}\n\nexport default Selection;","import React from 'react';\n\nconst FilmsCard = ({title,episode,director,producer,release_date}) => {\n    return(\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\n            <h3>{title}</h3>\n            <p>episode: {episode}</p>\n            <p>director: {director}</p>\n            <p>producer: {producer}</p>\n            <p>release Date: {release_date}</p>\n        </div>\n    );\n}\n\nexport default FilmsCard;","import React from 'react';\nimport FilmsCard from './filmsCard';\n\nconst FilmsList = ({ films }) => {\n    return(\n        <div>\n            {films.map((user,i) => {\n                return (\n                    <FilmsCard\n                    key={i} \n                    title={films[i].title.toLowerCase()} \n                    episode={films[i].episode_id}\n                    director={films[i].director.toLowerCase()}\n                    producer={films[i].producer.toLowerCase()}\n                    release_date={films[i].release_date} \n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default FilmsList;","import React from 'react';\n\nconst PeopleCard = ({name,gender,height,mass,hair_color,skin_color,eye_color,birth_year}) => {\n    return(\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\n            <h3>{name}</h3>\n            <p>gender: {gender}</p>\n            <p>height: {height} cm</p>\n            <p>weight: {mass} kg</p>\n            <p>hair colour: {hair_color}</p>\n            <p>skin colour: {skin_color}</p>\n            <p>eye colour: {eye_color}</p>\n            <p>birth year: {birth_year}</p>\n        </div>\n    );\n}\n\nexport default PeopleCard;","import React from 'react';\nimport PeopleCard from './peopleCard';\n\nconst PeopleList = ({ people }) => {\n    return(\n        <div>\n            {people.map((user,i) => {\n                return (\n                    <PeopleCard\n                    key={i} \n                    name={people[i].name.toLowerCase()} \n                    gender={people[i].gender} \n                    height={people[i].height}\n                    mass={people[i].mass} \n                    hair_color={people[i].hair_color.toLowerCase()} \n                    skin_color={people[i].skin_color.toLowerCase()} \n                    eye_color={people[i].eye_color.toLowerCase()} \n                    birth_year={people[i].birth_year} \n\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default PeopleList;","import React from 'react';\n\nconst SpeciesCard = ({name,classification,designation,average_height,skin_colors,hair_colors,eye_colors,average_lifespan,language}) => {\n    return(\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\n            <h3>{name}</h3>\n            <p>classification: {classification} </p>\n            <p>designation: {designation}</p>\n            <p>average height: {average_height}</p>\n            <p>skin colours: {skin_colors}</p>\n            <p>hair colours: {hair_colors}</p>\n            <p>eye colours: {eye_colors}</p>\n            <p>average lifespan: {average_lifespan}</p>\n            <p>language: {language}</p>\n        </div>\n    );\n}\n\nexport default SpeciesCard;","import React from 'react';\nimport SpeciesCard from './speciesCard';\n\nconst SpeciesList = ({ species }) => {\n    return(\n        <div>\n            {species.map((user,i) => {\n                return (\n                    <SpeciesCard\n                    key={i} \n                    name={species[i].name.toLowerCase()} \n                    classification={species[i].classification.toLowerCase()}\n                    designation={species[i].designation.toLowerCase()} \n                    average_height={species[i].average_height} \n                    skin_colors={species[i].skin_colors.toLowerCase()} \n                    hair_colors={species[i].hair_colors.toLowerCase()} \n                    eye_colors={species[i].eye_colors.toLowerCase()} \n                    average_lifespan={species[i].average_lifespan} \n                    language={species[i].language.toLowerCase()} \n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default SpeciesList;","import React from 'react';\n\nconst PlanetsCard = ({name,rotation_period,orbital_period,diameter,climate,gravity,terrain,population}) => {\n    return(\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\n            <h3>{name}</h3>\n            <p>Rotation Period: {rotation_period} hours</p>\n            <p>orbital Period: {orbital_period} days</p>\n            <p>Diameter: {diameter}</p>\n            <p>Climate: {climate}</p>\n            <p>Gravity: {gravity}</p>\n            <p>Terrain: {terrain}</p>\n            <p>Population: {population}</p>\n        </div>\n    );\n}\n\nexport default PlanetsCard;","import React from 'react';\nimport PlanetsCard from './planetsCard';\n\nconst PlanetsList = ({ planets }) => {\n    return(\n        <div>\n            {planets.map((user,i) => {\n                return (\n                    <PlanetsCard\n                    key={i} \n                    name={planets[i].name.toLowerCase()}\n                    rotation_period={planets[i].rotation_period} \n                    orbital_period={planets[i].orbital_period}\n                    diameter={planets[i].diameter}\n                    climate={planets[i].climate.toLowerCase()} \n                    gravity={planets[i].gravity.toLowerCase()} \n                    terrain={planets[i].terrain.toLowerCase()}\n                    population={planets[i].population}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default PlanetsList;","import React from 'react';\n\nconst StarshipsCard = ({name,model,manufacturer,cost_in_credits,length,max_atmosphering_speed,crew,passengers,cargo_capacity,consumables,hyperdrive_rating, MGLT,starship_class}) => {\n    return(\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\n            <h3>{name}</h3>\n            <p>model: {model}</p>\n            <p>manufacturer: {manufacturer}</p>\n            <p>cost: {cost_in_credits>0 ? `${cost_in_credits} credits` : `unknown`}</p>\n            <p>length: {length} meters</p>\n            <p>max atmosphering speed: {max_atmosphering_speed}</p>\n            <p>crew: {crew}</p>\n            <p>passengers: {passengers}</p>\n            <p>cargo capacity: {cargo_capacity}</p>\n            <p>consumables: {consumables}</p>\n            <p>hyperdrive rating: {hyperdrive_rating}</p>\n            <p>mglt: {MGLT}</p>\n            <p>starship class: {starship_class}</p>\n        </div>\n    );\n}\n\nexport default StarshipsCard;","import React from 'react';\nimport StarshipsCard from './starshipsCard';\n\nconst StarshipsList = ({ starships }) => {\n    return(\n        <div>\n            {starships.map((user,i) => {\n                return (\n                    <StarshipsCard\n                    key={i} \n                    name={starships[i].name.toLowerCase()} \n                    model={starships[i].model.toLowerCase()}\n                    manufacturer={starships[i].manufacturer.toLowerCase()}\n                    cost_in_credits={starships[i].cost_in_credits} \n                    length={starships[i].length} \n                    max_atmosphering_speed={starships[i].max_atmosphering_speed}\n                    crew={starships[i].crew} \n                    passengers={starships[i].passengers} \n                    cargo_capacity={starships[i].cargo_capacity} \n                    consumables={starships[i].consumables} \n                    hyperdrive_rating={starships[i].hyperdrive_rating}\n                    MGLT={starships[i].MGLT} \n                    starship_class={starships[i].starship_class.toLowerCase()} \n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default StarshipsList;","import React from 'react';\n\nconst VehiclesCard = ({name,model,manufacturer,cost_in_credits,length,max_atmosphering_speed,crew,passengers,cargo_capacity,consumables,vehicle_class}) => {\n    return(\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\n            <h3>{name}</h3>\n            <p>model: {model}</p>\n            <p>manufacturer: {manufacturer}</p>\n            <p>cost: {cost_in_credits>0 ? `${cost_in_credits} credits` : `unknown`}</p>\n            <p>length: {length} meters</p>\n            <p>max atmosphering speed: {max_atmosphering_speed}</p>\n            <p>crew: {crew}</p>\n            <p>passengers: {passengers}</p>\n            <p>cargo capacity: {cargo_capacity}</p>\n            <p>consumables: {consumables}</p>\n            <p>vehicle class: {vehicle_class}</p>\n        </div>\n    );\n}\n\nexport default VehiclesCard;","import React from 'react';\nimport VehiclesCard from './vehiclesCard';\n\nconst VehiclesList = ({ vehicles }) => {\n    return(\n        <div>\n            {vehicles.map((user,i) => {\n                return (\n                    <VehiclesCard\n                    key={i} \n                    name={vehicles[i].name.toLowerCase()} \n                    model={vehicles[i].model.toLowerCase()}\n                    manufacturer={vehicles[i].manufacturer.toLowerCase()}\n                    cost_in_credits={vehicles[i].cost_in_credits} \n                    length={vehicles[i].length}\n                    max_atmosphering_speed={vehicles[i].max_atmosphering_speed}\n                    crew={vehicles[i].crew}\n                    passengers={vehicles[i].passengers}\n                    cargo_capacity={vehicles[i].cargo_capacity}\n                    consumables={vehicles[i].consumables}\n                    vehicle_class={vehicles[i].vehicle_class.toLowerCase()}\n\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default VehiclesList;","import React from 'react';\n\nconst Navigation = ({ onButtonSelection }) => {\n\n            return(\n                <nav style={{position: 'absolute', top: '0%', right: '2%'}}>\n                    <p onClick={() => window.location.reload()} className='f2 dim link white pr3 pointer'>&#8634;</p>\n                </nav>\n            )\n        \n}\n\n\nexport default Navigation;","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBox from '../components/searchBox';\nimport Selection from '../components/Selection';\nimport FilmsList from '../components/filmsList';\nimport PeopleList from '../components/peopleList';\nimport SpeciesList from '../components/speciesList';\nimport PlanetsList from '../components/planetsList';\nimport StarshipsList from '../components/starshipsList';\nimport VehiclesList from '../components/vehiclesList';\nimport Navigation from '../components/Navigation';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      films: [],\n      people: [],\n      species: [],\n      planets: [],\n      starships: [],      \n      vehicles: [],\n      searchfield: '',\n      route: 'selection',\n    };\n  }\n\n  // TODO - Fetch all pages\n  // componentDidMount(){\n  //   const peopleURLS=[\n  //   \"https://swapi.co/api/people/\",\n  //   \"https://swapi.co/api/people/?page=2\",\n  //   \"https://swapi.co/api/people/?page=3\",\n  //   \"https://swapi.co/api/people/?page=4\",\n  //   \"https://swapi.co/api/people/?page=5\",\n  //   \"https://swapi.co/api/people/?page=6\",\n  //   \"https://swapi.co/api/people/?page=7\",\n  //   \"https://swapi.co/api/people/?page=8\",\n  //   ];\n\n  //   Promise.all(peopleURLS.map(async url => {\n  //     const resp = await fetch(url);\n  //     const mainResp =await resp.json();\n  //     let lastResp = this.state.people;\n  //     lastResp.push(mainResp.results);\n  //     var sortedArrayOfPeople = lastResp\n  //       .flat()\n  //     .sort((a, b) => a.name.localeCompare(b.name));\n  //     this.setState({people:sortedArrayOfPeople})\n  //   }))\n  // }\n\n  onButtonSelection = (route) => {\n    this.setState({route: route});\n  }\n\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value});\n  }\n\n  render() {\n    const {results,searchfield,route} = this.state;\n    if(this.state.route !== 'selection'){\n      fetch(`https://swapi.co/api/${this.state.route}/`)\n    .then(response => response.json())\n    .then(data => this.setState({results:data.results}));\n    }\n    if(route === 'films'){\n      var resultsFiltered = results\n                            .filter(result => {\n                              return result.title.toLowerCase().includes(searchfield.toLowerCase());\n                            })\n                            .sort((a, b) => a.episode_id < b.episode_id ? -1 : 1);\n    } else {\n      var resultsFiltered = results\n                            .filter(result => {\n                              return result.name.toLowerCase().includes(searchfield.toLowerCase());\n                            })\n                            .sort((a, b) => a.name < b.name ? -1 : 1);\n    }\n    if(results.length === 0 && route !== 'selection'){\n      return <h1 className='tc pt6'>Loading...</h1>\n    } else {\n    switch (route) {\n      case 'selection':\n        return(\n          <div className=\"tc\">\n            <h1 className='f1'>Star Wars</h1>\n            <h2 className='f3 pt3'>Search through your favourite Star Wars data!</h2>\n            <Selection onButtonSelection={this.onButtonSelection}/>\n          </div>\n        );\n      case 'films':\n        return(\n          <div className=\"tc\">\n            <Navigation onButtonSelection={this.onButtonSelection}/>  \n            <h1 className='f1'>Star Wars</h1>\n            <h2>Search for your favourite film!</h2>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <FilmsList films={resultsFiltered}/>\n          </div>\n        );\n      case 'people':\n        return(\n          <div className=\"tc\">\n            <Navigation onButtonSelection={this.onButtonSelection}/>\n            <h1 className='f1'>Star Wars</h1>\n            <h2>Search for your favourite people!</h2>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <PeopleList people={resultsFiltered}/>\n          </div>\n        );\n      case 'species':\n        return(\n          <div className=\"tc\">\n            <Navigation onButtonSelection={this.onButtonSelection}/>\n            <h1 className='f1'>Star Wars</h1>\n            <h2>Search for your favourite species!</h2>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <SpeciesList species={resultsFiltered}/>\n          </div>\n        );\n      case 'planets':\n        return(\n          <div className=\"tc\">\n            <Navigation onButtonSelection={this.onButtonSelection}/>\n            <h1 className='f1'>Star Wars</h1>\n            <h2>Search for your favourite planet!</h2>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <PlanetsList planets={resultsFiltered}/>\n          </div>\n        );\n      case 'starships':\n        return(\n          <div className=\"tc\">\n            <Navigation onButtonSelection={this.onButtonSelection}/>\n            <h1 className='f1'>Star Wars</h1>\n            <h2>Search for your favourite starship!</h2>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <StarshipsList starships={resultsFiltered}/>\n          </div>\n        );\n      case 'vehicles':\n        return(\n          <div className=\"tc\">\n            <Navigation onButtonSelection={this.onButtonSelection}/>\n            <h1 className='f1'>Star Wars</h1>\n            <h2>Search for your favourite vehicle!</h2>\n              <SearchBox searchChange={this.onSearchChange}/>\n              <VehiclesList vehicles={resultsFiltered}/>\n          </div>\n        );\n    }\n  }\n    \n\n    \n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}