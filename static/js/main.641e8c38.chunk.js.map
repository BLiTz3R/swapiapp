{"version":3,"sources":["components/searchBox.js","components/Selection.js","components/filmsCard.js","components/filmsList.js","components/peopleCard.js","components/peopleList.js","components/speciesCard.js","components/speciesList.js","components/planetsCard.js","components/planetsList.js","components/starshipsCard.js","components/starshipsList.js","components/vehiclesCard.js","components/vehiclesList.js","components/Navigation.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["SearchBox","searchField","searchChange","className","type","placeholder","onChange","Selection","onButtonSelection","onClick","FilmsCard","title","episode","director","producer","release_date","FilmsList","films","map","user","i","key","toLowerCase","episode_id","PeopleCard","name","gender","height","mass","hair_color","skin_color","eye_color","birth_year","PeopleList","people","SpeciesCard","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","SpeciesList","species","PlanetsCard","rotation_period","orbital_period","diameter","climate","gravity","terrain","population","PlanetsList","planets","StarshipsCard","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","StarshipsList","starships","VehiclesCard","vehicle_class","VehiclesList","vehicles","Navigation","style","position","top","right","window","location","reload","App","route","setState","onSearchChange","event","searchfield","target","value","state","results","this","fetch","then","response","json","data","resultsFiltered","filter","result","includes","sort","a","b","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.641e8c38.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Selection = ({onButtonSelection}) => {\r\n    return(\r\n            <div className=\"ph3 pt5\">\r\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('people')}>People</button>\r\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('planets')}>Planets</button>\r\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('films')}>Films</button>\r\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('species')}>Species</button>\r\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('vehicles')}>vehicles</button>\r\n                <button className=\"f4 link dim ph3 pv2 mb2 dib white bg-near-black ma2 pointer\" onClick={ () => onButtonSelection('starships')}>Starships</button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Selection;","import React from 'react';\r\n\r\nconst FilmsCard = ({title,episode,director,producer,release_date}) => {\r\n    return(\r\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\r\n            <h3>{title}</h3>\r\n            <p>episode: {episode}</p>\r\n            <p>director: {director}</p>\r\n            <p>producer: {producer}</p>\r\n            <p>release Date: {release_date}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilmsCard;","import React from 'react';\r\nimport FilmsCard from './filmsCard';\r\n\r\nconst FilmsList = ({ films }) => {\r\n    return(\r\n        <div>\r\n            {films.map((user,i) => {\r\n                return (\r\n                    <FilmsCard\r\n                    key={i} \r\n                    title={films[i].title.toLowerCase()} \r\n                    episode={films[i].episode_id}\r\n                    director={films[i].director.toLowerCase()}\r\n                    producer={films[i].producer.toLowerCase()}\r\n                    release_date={films[i].release_date} \r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilmsList;","import React from 'react';\r\n\r\nconst PeopleCard = ({name,gender,height,mass,hair_color,skin_color,eye_color,birth_year}) => {\r\n    return(\r\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\r\n            <h3>{name}</h3>\r\n            <p>gender: {gender}</p>\r\n            <p>height: {height} cm</p>\r\n            <p>weight: {mass} kg</p>\r\n            <p>hair colour: {hair_color}</p>\r\n            <p>skin colour: {skin_color}</p>\r\n            <p>eye colour: {eye_color}</p>\r\n            <p>birth year: {birth_year}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PeopleCard;","import React from 'react';\r\nimport PeopleCard from './peopleCard';\r\n\r\nconst PeopleList = ({ people }) => {\r\n    return(\r\n        <div>\r\n            {people.map((user,i) => {\r\n                return (\r\n                    <PeopleCard\r\n                    key={i} \r\n                    name={people[i].name.toLowerCase()} \r\n                    gender={people[i].gender} \r\n                    height={people[i].height}\r\n                    mass={people[i].mass} \r\n                    hair_color={people[i].hair_color.toLowerCase()} \r\n                    skin_color={people[i].skin_color.toLowerCase()} \r\n                    eye_color={people[i].eye_color.toLowerCase()} \r\n                    birth_year={people[i].birth_year} \r\n\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PeopleList;","import React from 'react';\r\n\r\nconst SpeciesCard = ({name,classification,designation,average_height,skin_colors,hair_colors,eye_colors,average_lifespan,language}) => {\r\n    return(\r\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\r\n            <h3>{name}</h3>\r\n            <p>classification: {classification} </p>\r\n            <p>designation: {designation}</p>\r\n            <p>average height: {average_height}</p>\r\n            <p>skin colours: {skin_colors}</p>\r\n            <p>hair colours: {hair_colors}</p>\r\n            <p>eye colours: {eye_colors}</p>\r\n            <p>average lifespan: {average_lifespan}</p>\r\n            <p>language: {language}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpeciesCard;","import React from 'react';\r\nimport SpeciesCard from './speciesCard';\r\n\r\nconst SpeciesList = ({ species }) => {\r\n    return(\r\n        <div>\r\n            {species.map((user,i) => {\r\n                return (\r\n                    <SpeciesCard\r\n                    key={i} \r\n                    name={species[i].name.toLowerCase()} \r\n                    classification={species[i].classification.toLowerCase()}\r\n                    designation={species[i].designation.toLowerCase()} \r\n                    average_height={species[i].average_height} \r\n                    skin_colors={species[i].skin_colors.toLowerCase()} \r\n                    hair_colors={species[i].hair_colors.toLowerCase()} \r\n                    eye_colors={species[i].eye_colors.toLowerCase()} \r\n                    average_lifespan={species[i].average_lifespan} \r\n                    language={species[i].language.toLowerCase()} \r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpeciesList;","import React from 'react';\r\n\r\nconst PlanetsCard = ({name,rotation_period,orbital_period,diameter,climate,gravity,terrain,population}) => {\r\n    return(\r\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\r\n            <h3>{name}</h3>\r\n            <p>Rotation Period: {rotation_period} hours</p>\r\n            <p>orbital Period: {orbital_period} days</p>\r\n            <p>Diameter: {diameter}</p>\r\n            <p>Climate: {climate}</p>\r\n            <p>Gravity: {gravity}</p>\r\n            <p>Terrain: {terrain}</p>\r\n            <p>Population: {population}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlanetsCard;","import React from 'react';\r\nimport PlanetsCard from './planetsCard';\r\n\r\nconst PlanetsList = ({ planets }) => {\r\n    return(\r\n        <div>\r\n            {planets.map((user,i) => {\r\n                return (\r\n                    <PlanetsCard\r\n                    key={i} \r\n                    name={planets[i].name.toLowerCase()}\r\n                    rotation_period={planets[i].rotation_period} \r\n                    orbital_period={planets[i].orbital_period}\r\n                    diameter={planets[i].diameter}\r\n                    climate={planets[i].climate.toLowerCase()} \r\n                    gravity={planets[i].gravity.toLowerCase()} \r\n                    terrain={planets[i].terrain.toLowerCase()}\r\n                    population={planets[i].population}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlanetsList;","import React from 'react';\r\n\r\nconst StarshipsCard = ({name,model,manufacturer,cost_in_credits,length,max_atmosphering_speed,crew,passengers,cargo_capacity,consumables,hyperdrive_rating, MGLT,starship_class}) => {\r\n    return(\r\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\r\n            <h3>{name}</h3>\r\n            <p>model: {model}</p>\r\n            <p>manufacturer: {manufacturer}</p>\r\n            <p>cost: {cost_in_credits>0 ? `${cost_in_credits} credits` : `unknown`}</p>\r\n            <p>length: {length} meters</p>\r\n            <p>max atmosphering speed: {max_atmosphering_speed}</p>\r\n            <p>crew: {crew}</p>\r\n            <p>passengers: {passengers}</p>\r\n            <p>cargo capacity: {cargo_capacity}</p>\r\n            <p>consumables: {consumables}</p>\r\n            <p>hyperdrive rating: {hyperdrive_rating}</p>\r\n            <p>mglt: {MGLT}</p>\r\n            <p>starship class: {starship_class}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StarshipsCard;","import React from 'react';\r\nimport StarshipsCard from './starshipsCard';\r\n\r\nconst StarshipsList = ({ starships }) => {\r\n    return(\r\n        <div>\r\n            {starships.map((user,i) => {\r\n                return (\r\n                    <StarshipsCard\r\n                    key={i} \r\n                    name={starships[i].name.toLowerCase()} \r\n                    model={starships[i].model.toLowerCase()}\r\n                    manufacturer={starships[i].manufacturer.toLowerCase()}\r\n                    cost_in_credits={starships[i].cost_in_credits} \r\n                    length={starships[i].length} \r\n                    max_atmosphering_speed={starships[i].max_atmosphering_speed}\r\n                    crew={starships[i].crew} \r\n                    passengers={starships[i].passengers} \r\n                    cargo_capacity={starships[i].cargo_capacity} \r\n                    consumables={starships[i].consumables} \r\n                    hyperdrive_rating={starships[i].hyperdrive_rating}\r\n                    MGLT={starships[i].MGLT} \r\n                    starship_class={starships[i].starship_class.toLowerCase()} \r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StarshipsList;","import React from 'react';\r\n\r\nconst VehiclesCard = ({name,model,manufacturer,cost_in_credits,length,max_atmosphering_speed,crew,passengers,cargo_capacity,consumables,vehicle_class}) => {\r\n    return(\r\n        <div className=\"bg-yellow shadow-5 tc grow dib pa3 ma2 br3\">\r\n            <h3>{name}</h3>\r\n            <p>model: {model}</p>\r\n            <p>manufacturer: {manufacturer}</p>\r\n            <p>cost: {cost_in_credits>0 ? `${cost_in_credits} credits` : `unknown`}</p>\r\n            <p>length: {length} meters</p>\r\n            <p>max atmosphering speed: {max_atmosphering_speed}</p>\r\n            <p>crew: {crew}</p>\r\n            <p>passengers: {passengers}</p>\r\n            <p>cargo capacity: {cargo_capacity}</p>\r\n            <p>consumables: {consumables}</p>\r\n            <p>vehicle class: {vehicle_class}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VehiclesCard;","import React from 'react';\r\nimport VehiclesCard from './vehiclesCard';\r\n\r\nconst VehiclesList = ({ vehicles }) => {\r\n    return(\r\n        <div>\r\n            {vehicles.map((user,i) => {\r\n                return (\r\n                    <VehiclesCard\r\n                    key={i} \r\n                    name={vehicles[i].name.toLowerCase()} \r\n                    model={vehicles[i].model.toLowerCase()}\r\n                    manufacturer={vehicles[i].manufacturer.toLowerCase()}\r\n                    cost_in_credits={vehicles[i].cost_in_credits} \r\n                    length={vehicles[i].length}\r\n                    max_atmosphering_speed={vehicles[i].max_atmosphering_speed}\r\n                    crew={vehicles[i].crew}\r\n                    passengers={vehicles[i].passengers}\r\n                    cargo_capacity={vehicles[i].cargo_capacity}\r\n                    consumables={vehicles[i].consumables}\r\n                    vehicle_class={vehicles[i].vehicle_class.toLowerCase()}\r\n\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VehiclesList;","import React from 'react';\r\n\r\nconst Navigation = ({ onButtonSelection }) => {\r\n\r\n            return(\r\n                <nav style={{position: 'absolute', top: '0%', right: '2%'}}>\r\n                    <p onClick={() => window.location.reload()} className='f2 dim link white pr3 pointer'>&#8634;</p>\r\n                </nav>\r\n            )\r\n        \r\n}\r\n\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SearchBox from '../components/searchBox';\r\nimport Selection from '../components/Selection';\r\nimport FilmsList from '../components/filmsList';\r\nimport PeopleList from '../components/peopleList';\r\nimport SpeciesList from '../components/speciesList';\r\nimport PlanetsList from '../components/planetsList';\r\nimport StarshipsList from '../components/starshipsList';\r\nimport VehiclesList from '../components/vehiclesList';\r\nimport Navigation from '../components/Navigation';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      results: [],\r\n      films: [],\r\n      people: [],\r\n      species: [],\r\n      planets: [],\r\n      starships: [],      \r\n      vehicles: [],\r\n      searchfield: '',\r\n      route: 'selection',\r\n    };\r\n  }\r\n\r\n  // TODO - Fetch all pages\r\n  // componentDidMount(){\r\n  //   const peopleURLS=[\r\n  //   \"https://swapi.dev/api/people/1\",\r\n  //   \"https://swapi.dev/api/people/2\",\r\n  //   \"https://swapi.dev/api/people/3\",\r\n  //   \"https://swapi.dev/api/people/4\",\r\n  //   \"https://swapi.dev/api/people/5\",\r\n  //   \"https://swapi.dev/api/people/6\",\r\n  //   \"https://swapi.dev/api/people/7\",\r\n  //   \"https://swapi.dev/api/people/8\",\r\n  //   ];\r\n\r\n  //   Promise.all(peopleURLS.map(async url => {\r\n  //     const resp = await fetch(url);\r\n  //     const mainResp = await resp.json();\r\n  //     let lastResp = this.state.people;\r\n  //     lastResp.push(mainResp.results);\r\n  //     var sortedArrayOfPeople = lastResp\r\n  //       .flat()\r\n  //     .sort((a, b) => a.name.localeCompare(b.name));\r\n  //     this.setState({people:sortedArrayOfPeople})\r\n  //   }))\r\n  // }\r\n\r\n  onButtonSelection = (route) => {\r\n    this.setState({route: route});\r\n  }\r\n\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    const {results,searchfield,route} = this.state;\r\n    if(this.state.route !== 'selection'){\r\n      fetch(`https://swapi.dev/api/${this.state.route}/`)\r\n    .then(response => response.json())\r\n    .then(data => this.setState({results:data.results}));\r\n    }\r\n    if(route === 'films'){\r\n      var resultsFiltered = results\r\n                            .filter(result => {\r\n                              return result.title.toLowerCase().includes(searchfield.toLowerCase());\r\n                            })\r\n                            .sort((a, b) => a.episode_id < b.episode_id ? -1 : 1);\r\n    } else {\r\n      var resultsFiltered = results\r\n                            .filter(result => {\r\n                              return result.name.toLowerCase().includes(searchfield.toLowerCase());\r\n                            })\r\n                            .sort((a, b) => a.name < b.name ? -1 : 1);\r\n    }\r\n    if(results.length === 0 && route !== 'selection'){\r\n      return <h1 className='tc pt6'>Loading...</h1>\r\n    } else {\r\n    switch (route) {\r\n      case 'selection':\r\n        return(\r\n          <div className=\"tc\">\r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2 className='f3 pt3'>Search through your favourite Star Wars data!</h2>\r\n            <Selection onButtonSelection={this.onButtonSelection}/>\r\n          </div>\r\n        );\r\n      case 'films':\r\n        return(\r\n          <div className=\"tc\">\r\n            <Navigation onButtonSelection={this.onButtonSelection}/>  \r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2>Search for your favourite film!</h2>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <FilmsList films={resultsFiltered}/>\r\n          </div>\r\n        );\r\n      case 'people':\r\n        return(\r\n          <div className=\"tc\">\r\n            <Navigation onButtonSelection={this.onButtonSelection}/>\r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2>Search for your favourite people!</h2>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <PeopleList people={resultsFiltered}/>\r\n          </div>\r\n        );\r\n      case 'species':\r\n        return(\r\n          <div className=\"tc\">\r\n            <Navigation onButtonSelection={this.onButtonSelection}/>\r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2>Search for your favourite species!</h2>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <SpeciesList species={resultsFiltered}/>\r\n          </div>\r\n        );\r\n      case 'planets':\r\n        return(\r\n          <div className=\"tc\">\r\n            <Navigation onButtonSelection={this.onButtonSelection}/>\r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2>Search for your favourite planet!</h2>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <PlanetsList planets={resultsFiltered}/>\r\n          </div>\r\n        );\r\n      case 'starships':\r\n        return(\r\n          <div className=\"tc\">\r\n            <Navigation onButtonSelection={this.onButtonSelection}/>\r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2>Search for your favourite starship!</h2>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <StarshipsList starships={resultsFiltered}/>\r\n          </div>\r\n        );\r\n      case 'vehicles':\r\n        return(\r\n          <div className=\"tc\">\r\n            <Navigation onButtonSelection={this.onButtonSelection}/>\r\n            <h1 className='f1'>Star Wars</h1>\r\n            <h2>Search for your favourite vehicle!</h2>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <VehiclesList vehicles={resultsFiltered}/>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n    \r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}